---
- name: Check if keystore exists in role
  stat:
    path: '{{ solr_local_keystore }}'
  delegate_to: localhost
  register: keystore_file

- name: Check if keystore exists in solr directory
  win_stat:
    path: '{{ solr_ssl_key_store_path }}\{{ solr_ssl_key_store_name }}'
  register: keystore_file_solr

- name: Copy keystore file
  win_copy:
    src: '{{ solr_local_keystore }}'
    dest: '{{ solr_ssl_key_store }}'
    force: true
  when:
    - keystore_file.stat.exists
    - not keystore_file_solr.stat.exists

- name: Check choco
  win_chocolatey:
    name: chocolatey
    state: present
  register: choco_install
  retries: 15
  delay: 5
  until: choco_install is succeeded
  when: not keystore_file.stat.exists or not keystore_file_solr.stat.exists

# Workaround for new chocolatey output.
# See https://github.com/ansible/ansible/issues/53860#issuecomment-473431360 for more details
- name: disable enhanced exit codes
  win_chocolatey_feature:
    name: useEnhancedExitCodes
    state: disabled
  when: not keystore_file.stat.exists or not keystore_file_solr.stat.exists

- name: Install OpenSSL
  win_chocolatey:
    name: openssl.light
    state: present
  register: choco_package_install
  retries: 15
  delay: 5
  until: choco_package_install is succeeded
  when: not keystore_file.stat.exists or not keystore_file_solr.stat.exists

- name: Create private certificate
  win_command: >-
    openssl genrsa -out {{ solr_win_temp_dir }}\{{ solr_local_pkey_file_name }}
    {{ solr_ssl_key_size | int }}
  args:
    creates: '{{ solr_ssl_key_store_path }}\{{ solr_ssl_key_store_name }}'
  when: not keystore_file.stat.exists

- name: Create CSR
  win_command: >-
    openssl req -nodes -newkey rsa:{{ solr_ssl_key_size | int }}
    -keyout {{ solr_win_temp_dir }}\{{ solr_local_pkey_file_name }}
    -out {{ solr_win_temp_dir }}\{{ solr_local_cert_file_name }}.csr
    -subj {{ solr_win_ssl_subj }}
  args:
    creates: '{{ solr_ssl_key_store_path }}\{{ solr_ssl_key_store_name }}'
  when: not keystore_file.stat.exists

- name: Create certificates for keystore
  win_command: >-
    openssl x509 -req -days 365
    -in {{ solr_win_temp_dir }}\{{ solr_local_cert_file_name }}.csr
    -signkey {{ solr_win_temp_dir }}\{{ solr_local_pkey_file_name }}
    -out {{ solr_win_temp_dir }}\{{ solr_local_cert_file_name }}
  args:
    creates: '{{ solr_ssl_key_store_path }}\{{ solr_ssl_key_store_name }}'
  when: not keystore_file.stat.exists

- name: Export certificate and private key into a bundle
  win_command: >-
    openssl pkcs12 -export
    -in {{ solr_win_temp_dir }}\{{ solr_local_cert_file_name }}
    -inkey {{ solr_win_temp_dir }}\{{ solr_local_pkey_file_name }}
    -name {{ ansible_hostname  }}
    -passout pass:{{ solr_ssl_key_store_password }}
    -out {{ solr_win_temp_dir }}\{{ ansible_hostname  }}.p12
  args:
    chdir: '{{ solr_win_temp_dir }}'
    creates: '{{ solr_ssl_key_store_path }}\{{ solr_ssl_key_store_name }}'
  when:
    - not keystore_file.stat.exists

- name: Get java directory
  win_shell: '(Get-ChildItem Env:JAVA_HOME | \
    Select-Object Value | ft -HideTableHeaders | Out-String).Trim()'
  args:
    creates: '{{ solr_ssl_key_store_path }}\{{ solr_ssl_key_store_name }}'
  register: java_directory
  when:
    - not keystore_file.stat.exists

- name: Import the PKCS12 file into a new java keystore
  win_command: >-
    keytool
    -importkeystore
    -deststorepass {{ solr_ssl_key_store_password }}
    -srcstorepass {{ solr_ssl_key_store_password }}
    -destkeystore {{ solr_ssl_key_store_name }}
    -srckeystore {{ solr_win_temp_dir }}\{{ ansible_hostname  }}.p12
    -srcstoretype PKCS12
  args:
    chdir: '{{ solr_ssl_key_store_path }}'
    creates: '{{ solr_ssl_key_store_path }}\{{ solr_ssl_key_store_name }}'
  when:
    - not keystore_file.stat.exists
